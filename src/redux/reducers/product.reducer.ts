import { getProducts, getOneProduct } from './../../services/index';
import { createSlice, PayloadAction, createAsyncThunk } from "@reduxjs/toolkit"

// Define an async function to fetch products
export const fetchProducts = createAsyncThunk(
  'products/fetchProducts',
  async () => {
    const response: any = await getProducts();

    console.log('response', response);
    // const data = await response.json();
    return response.data;
  }
);

// In your slice, handle the async actions generated by createAsyncThunk
const productsSlice = createSlice({
  name: 'products',
  initialState: {
    items: [],
    status: 'idle',
    error: null,
  },
  reducers: {
    // Add any other reducers here
  },
  extraReducers: (builder) => {
    builder
      .addCase(fetchProducts.pending, (state) => {
        state.status = 'loading';
      })
      .addCase(fetchProducts.fulfilled, (state, action) => {
        state.status = 'succeeded';
        state.items = action.payload;
      })
      .addCase(fetchProducts.rejected, (state, action) => {
        state.status = 'failed';
        // state.error = action.error.message;
      })
  },
});

// Export the reducer from the slice

export default productsSlice.reducer
